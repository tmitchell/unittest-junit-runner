# unittest.py JUnit TestRunner

This project came about because I wanted to use [nose][1]'s
`--with-xunit` plugin, but needed to use [unittest.py][2].

It will generate a JUnit style XML test report that is readable by
[Hudson][3].

[1]: http://somethingaboutorange.com/mrl/projects/nose/0.11.2/
[2]: http://docs.python.org/library/unittest.html
[3]: http://hudson-ci.org/

## Usage

    from junitrunner import JUnitTestRunner, JUnitTest, JUnitTestSuite

    class PassingTest(JUnitTest):
        def __init__(self, name, *args, **kwargs):
            super(PassingTest, self).__init__(*args, **kwargs)
            if name:
                self.name = name
         
        def runTest(self):
            assert True

    report_file = 'testresults.xml'

    suite = JUnitTestSuite()
    suite.name = 'Example'
    suite.addTest(PassingTest('Renamed Test'))
    suite.addTest(PassingTest(None))

    result = JUnitTestRunner(report_file).run(suite)

## Example Report

    <?xml version="1.0" encoding="UTF-8"?>
    <testsuites>
        <testsuite name="Example" tests="2" errors="0" failures="0" skip="0">
            <testcase classname="__main__.PassingTest" name="Renamed Test" time="0" />
            <testcase classname="__main__.PassingTest" name="runTest" time="0" />
        </testsuite>
    </testsuites>
